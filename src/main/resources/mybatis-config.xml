<?xml version="1.0" encoding="UTF-8" ?>
<!-- DTD约定 -->
<!DOCTYPE configuration
    PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!-- 一些配置文件 -->
<configuration>
    <settings>
        <!--配置resultType驼峰命名自动映射-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!-- 配置日志文件 -->
        <setting name="logImpl" value="LOG4J"/>
        <!-- 开启二级缓存 -->
        <setting value="true" name="cacheEnabled"/>
        <!-- 查询时，关闭关联对象即时加载以提高性能 -->
        <setting value="false" name="lazyLoadingEnabled"/>
        <!-- 对于未知的SQL查询，允许返回不同的结果集以达到通用的效果 -->
        <setting value="true" name="multipleResultSetsEnabled"/>
        <!-- 允许使用列标签代替列名 -->
        <setting value="true" name="useColumnLabel"/>
        <!-- 不允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖 -->
        <setting value="false" name="useGeneratedKeys"/>
        <!-- 给予被嵌套的resultMap以字段-属性的映射支持 FULL,PARTIAL -->
        <setting value="PARTIAL" name="autoMappingBehavior"/>
        <!-- 对于批量更新操作缓存SQL以提高性能 BATCH,SIMPLE -->
        <!-- <setting name="defaultExecutorType" value="BATCH" /> -->
        <!-- 数据库超过25000秒仍未响应则超时 -->
        <!-- <setting name="defaultStatementTimeout" value="25000" /> -->
        <!-- Allows using RowBounds on nested statements -->
        <setting value="false" name="safeRowBoundsEnabled"/>
        <!-- Enables automatic mapping from classic database column names A_COLUMN to camel case classic Java property names aColumn. -->
        <setting value="true" name="mapUnderscoreToCamelCase"/>
        <!-- MyBatis uses local cache to prevent circular references and speed up repeated nested queries. By default (SESSION) all queries executed during a session are cached. If localCacheScope=STATEMENT local session will be used just for statement execution, no data will be shared between two different calls to the same SqlSession. -->
        <setting value="SESSION" name="localCacheScope"/>
        <!-- Specifies the JDBC type for null values when no specific JDBC type was provided for the parameter. Some drivers require specifying the column JDBC type but others work with generic values like NULL, VARCHAR or OTHER. -->
        <setting value="OTHER" name="jdbcTypeForNull"/>
        <!-- Specifies which Object's methods trigger a lazy load -->
        <setting value="equals,clone,hashCode,toString" name="lazyLoadTriggerMethods"/>
        <!-- 设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指 定)，不会加载关联表的所有字段，以提高性能 -->
        <setting value="true" name="aggressiveLazyLoading"/>
    </settings>
<!-- 配置环境 -->
  <!--<environments default="development">-->
    <!--<environment id="development">-->
        <!--&lt;!&ndash; <transationManager>元素让您为SQL Map配置事务管理服务。&ndash;&gt;-->
      <!--<transactionManager type="JDBC"/>-->
        <!--&lt;!&ndash;JDBC：通过常用的Connection commit()和rollback()方法，让JDBC管理事务。&ndash;&gt;-->
      <!--&lt;!&ndash; 数据源 &ndash;&gt;-->
        <!--&lt;!&ndash; <datasource>是<transactionManager>的一部分，为SQL Map数据源设置了一系列参数。&ndash;&gt;-->
      <!--<dataSource type="UNPOOLED">   &lt;!&ndash; unpooled 表示没有用连接池 &ndash;&gt;-->
        <!--<property name="driver" value="com.mysql.jdbc.Driver" />-->
        <!--<property name="url" value="jdbc:mysql://localhost:3306/demo1db?characterEncoding=utf8&amp;useSSL=false" />-->
        <!--<property name="username" value="root" />-->
        <!--<property name="password" value="123456" />-->
      <!--</dataSource>-->
    <!--</environment>-->
  <!--</environments>-->
<!-- 映射文件 -->
<!--<mappers>-->
    <!--<mapper resource="com/chixing/dao/CartMapper.xml" />-->
<!--</mappers>-->
</configuration>
