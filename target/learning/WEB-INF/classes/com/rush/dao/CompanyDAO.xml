<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rush.dao.CompanyDAO">
  <cache type="com.rush.util.RedisCache"/>
  <resultMap id="BaseResultMap" type="com.rush.entity.Company">
    <id column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="company_password" jdbcType="VARCHAR" property="companyPassword" />
    <result column="company_address" jdbcType="VARCHAR" property="companyAddress" />
    <result column="company_registration_code" jdbcType="VARCHAR" property="companyRegistrationCode" />
    <result column="company_legal_representative" jdbcType="VARCHAR" property="companyLegalRepresentative" />
    <result column="company_phone" jdbcType="VARCHAR" property="companyPhone" />
    <result column="company_type" jdbcType="VARCHAR" property="companyType" />
    <result column="company_register_time" jdbcType="TIMESTAMP" property="companyRegisterTime" />
    <result column="company_email" jdbcType="VARCHAR" property="companyEmail" />
    <result column="company_introduction" jdbcType="VARCHAR" property="companyIntroduction" />
    <result column="company_status" jdbcType="INTEGER" property="companyStatus" />
    <result column="company_spare" jdbcType="VARCHAR" property="companySpare" />
  </resultMap>
  <sql id="Base_Column_List">
    company_id, company_name, company_password, company_address, company_registration_code, 
    company_legal_representative, company_phone, company_type, company_register_time, 
    company_email, company_introduction, company_status, company_spare
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from company
    where company_id = #{companyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from company
    where company_id = #{companyId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rush.entity.Company">
    insert into company (company_id, company_name, company_password, 
      company_address, company_registration_code, 
      company_legal_representative, company_phone, 
      company_type, company_register_time, company_email, 
      company_introduction, company_status, company_spare
      )
    values (#{companyId,jdbcType=INTEGER}, #{companyName,jdbcType=VARCHAR}, #{companyPassword,jdbcType=VARCHAR}, 
      #{companyAddress,jdbcType=VARCHAR}, #{companyRegistrationCode,jdbcType=VARCHAR}, 
      #{companyLegalRepresentative,jdbcType=VARCHAR}, #{companyPhone,jdbcType=VARCHAR}, 
      #{companyType,jdbcType=VARCHAR}, #{companyRegisterTime,jdbcType=TIMESTAMP}, #{companyEmail,jdbcType=VARCHAR}, 
      #{companyIntroduction,jdbcType=VARCHAR}, #{companyStatus,jdbcType=INTEGER}, #{companySpare,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.rush.entity.Company">
    insert into company
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="companyPassword != null">
        company_password,
      </if>
      <if test="companyAddress != null">
        company_address,
      </if>
      <if test="companyRegistrationCode != null">
        company_registration_code,
      </if>
      <if test="companyLegalRepresentative != null">
        company_legal_representative,
      </if>
      <if test="companyPhone != null">
        company_phone,
      </if>
      <if test="companyType != null">
        company_type,
      </if>
      <if test="companyRegisterTime != null">
        company_register_time,
      </if>
      <if test="companyEmail != null">
        company_email,
      </if>
      <if test="companyIntroduction != null">
        company_introduction,
      </if>
      <if test="companyStatus != null">
        company_status,
      </if>
      <if test="companySpare != null">
        company_spare,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyPassword != null">
        #{companyPassword,jdbcType=VARCHAR},
      </if>
      <if test="companyAddress != null">
        #{companyAddress,jdbcType=VARCHAR},
      </if>
      <if test="companyRegistrationCode != null">
        #{companyRegistrationCode,jdbcType=VARCHAR},
      </if>
      <if test="companyLegalRepresentative != null">
        #{companyLegalRepresentative,jdbcType=VARCHAR},
      </if>
      <if test="companyPhone != null">
        #{companyPhone,jdbcType=VARCHAR},
      </if>
      <if test="companyType != null">
        #{companyType,jdbcType=VARCHAR},
      </if>
      <if test="companyRegisterTime != null">
        #{companyRegisterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="companyEmail != null">
        #{companyEmail,jdbcType=VARCHAR},
      </if>
      <if test="companyIntroduction != null">
        #{companyIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="companyStatus != null">
        #{companyStatus,jdbcType=INTEGER},
      </if>
      <if test="companySpare != null">
        #{companySpare,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rush.entity.Company">
    update company
    <set>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyPassword != null">
        company_password = #{companyPassword,jdbcType=VARCHAR},
      </if>
      <if test="companyAddress != null">
        company_address = #{companyAddress,jdbcType=VARCHAR},
      </if>
      <if test="companyRegistrationCode != null">
        company_registration_code = #{companyRegistrationCode,jdbcType=VARCHAR},
      </if>
      <if test="companyLegalRepresentative != null">
        company_legal_representative = #{companyLegalRepresentative,jdbcType=VARCHAR},
      </if>
      <if test="companyPhone != null">
        company_phone = #{companyPhone,jdbcType=VARCHAR},
      </if>
      <if test="companyType != null">
        company_type = #{companyType,jdbcType=VARCHAR},
      </if>
      <if test="companyRegisterTime != null">
        company_register_time = #{companyRegisterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="companyEmail != null">
        company_email = #{companyEmail,jdbcType=VARCHAR},
      </if>
      <if test="companyIntroduction != null">
        company_introduction = #{companyIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="companyStatus != null">
        company_status = #{companyStatus,jdbcType=INTEGER},
      </if>
      <if test="companySpare != null">
        company_spare = #{companySpare,jdbcType=VARCHAR},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rush.entity.Company">
    update company
    set company_name = #{companyName,jdbcType=VARCHAR},
      company_password = #{companyPassword,jdbcType=VARCHAR},
      company_address = #{companyAddress,jdbcType=VARCHAR},
      company_registration_code = #{companyRegistrationCode,jdbcType=VARCHAR},
      company_legal_representative = #{companyLegalRepresentative,jdbcType=VARCHAR},
      company_phone = #{companyPhone,jdbcType=VARCHAR},
      company_type = #{companyType,jdbcType=VARCHAR},
      company_register_time = #{companyRegisterTime,jdbcType=TIMESTAMP},
      company_email = #{companyEmail,jdbcType=VARCHAR},
      company_introduction = #{companyIntroduction,jdbcType=VARCHAR},
      company_status = #{companyStatus,jdbcType=INTEGER},
      company_spare = #{companySpare,jdbcType=VARCHAR}
    where company_id = #{companyId,jdbcType=INTEGER}
  </update>
  <select id="selectPasswordByEmail" parameterType="java.lang.String" resultType="java.lang.String">
    select  company_password
    from company
    where company_email = #{companyEmail,jdbcType=VARCHAR};
  </select>
  <update id="updatePasswordByEmail" parameterType="java.util.Map">
    update company
    set company_password = #{companyPassword,jdbcType=VARCHAR}
    where company_email = #{companyEmail,jdbcType=VARCHAR};
  </update>
  <select id="selectCompanyNameByPrimaryId" parameterType="java.lang.Integer" resultType="java.lang.String">
    select company_name
    from company
    where company_id = #{companyId,jdbcType=INTEGER};
  </select>
  <select id="selectCompanyIdByKeyword" parameterType="java.lang.String" resultType="java.lang.Integer">
    select company_id from company
    where company_name like concat('%',#{keyword,jdbcType=VARCHAR},'%');
  </select>


  <!--+++++++++++++++++++++++++-->

  <select id="selectEmailAndPwd" parameterType="com.rush.entity.LoginBean" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from company where company_email=#{companyEmail} and company_password=#{companyPassword};
  </select>
  <update id="updateCompanyInfo" parameterType="com.rush.entity.Company" >
      update company
      set company_name = #{companyName,jdbcType=VARCHAR},
      company_address = #{companyAddress,jdbcType=VARCHAR},
      company_legal_representative = #{companyLegalRepresentative,jdbcType=VARCHAR},
      company_phone = #{companyPhone,jdbcType=VARCHAR},
      company_type = #{companyType,jdbcType=VARCHAR},
      company_register_time = #{companyRegisterTime,jdbcType=TIMESTAMP},
      company_email = #{companyEmail,jdbcType=VARCHAR},
      company_introduction = #{companyIntroduction,jdbcType=VARCHAR},
      where company_id = #{companyId,jdbcType=INTEGER}
    </update>

  <insert id="registerCompany" parameterType="com.rush.entity.Company">
      insert into company (company_id, company_name, company_password,
      company_address, company_registration_code,
      company_legal_representative, company_phone,
      company_type, company_register_time, company_email,
      company_introduction, company_status, company_spare
      )
    values (#{companyId,jdbcType=INTEGER}, #{companyName,jdbcType=VARCHAR}, #{companyPassword,jdbcType=VARCHAR},
      #{companyAddress,jdbcType=VARCHAR}, #{companyRegistrationCode,jdbcType=VARCHAR},
      #{companyLegalRepresentative,jdbcType=VARCHAR}, #{companyPhone,jdbcType=VARCHAR},
      #{companyType,jdbcType=VARCHAR}, #{companyRegisterTime,jdbcType=TIMESTAMP}, #{companyEmail,jdbcType=VARCHAR},
      #{companyIntroduction,jdbcType=VARCHAR}, #{companyStatus,jdbcType=INTEGER}, #{companySpare,jdbcType=VARCHAR}
      )
    </insert>
  <select id="getCompanyInfo" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from company
    where company_id = #{companyId,jdbcType=INTEGER}
  </select>
  <select id="companyIsExist" parameterType="java.lang.String" resultType="java.lang.String">
        select company_email
        from company
        where company_email= #{email}
    </select>
</mapper>